# TODO:
# - Implement testing matrix
# - limit publish to master and release branches and push only
# - publish unit test results
# - parameterize python version
# - parameterize artifact directory
# - Create release

name: BatCave
on:
  push:
  pull_request:
  workflow_dispatch:
concurrency:
  group: ${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

env:
  PRODUCT: batcave
  VIRTUAL_ENV: venv
  ARTIFACTS_DIR: dist
  FLIT_ROOT_INSTALL: 1
  UNIT_TEST_DIR: unit_test_results
  GIT_AUTHOR_NAME: "${{ github.triggering_actor }}"
  GIT_AUTHOR_EMAIL: "${{ github.triggering_actor }}@users.noreply.github.com"

jobs:
  static-analysis:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.10", "3.11", "3.12"]
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
          cache: "pip"
      - uses: actions/cache@v3
        with:
          path: venv
          key: pip-${{ runner.os }}-${{ matrix.python-version }}
      - run: cicd-support/cicd.sh "${{ github.job }}"

  unit-tests:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest] #, windows-latest]
        python-version: ["3.10", "3.11", "3.12"]
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
          cache: "pip"
      - uses: actions/cache@v3
        with:
          path: venv
          key: pip-${{ runner.os }}-${{ matrix.python-version }}
      - run: cicd-support/cicd.sh "${{ github.job }}"

  build:
    needs:
      - static-analysis
      - unit-tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v4
        with:
          python-version: "3.10"
          cache: "pip"
      - uses: actions/cache@v3
        with:
          path: venv
          key: pip-${{ runner.os }}-3.10
      - run: cicd-support/cicd.sh "${{ github.job }}"
      - uses: actions/upload-artifact@v4
        with:
          name: dist
          path: dist

  install-test:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v4
        with:
          python-version: "3.10"
      - uses: actions/download-artifact@v4
      - uses: actions/cache@v3
        with:
          path: venv
          key: pip-${{ runner.os }}-3.10
      - run: cicd-support/cicd.sh "${{ github.job }}"

  # publish-test:
  #   needs: install-test
  #   runs-on: ubuntu-latest
  #   environment: Staging
  #   permissions:
  #     contents: write
  #   steps:
  #     - uses: actions/checkout@v4
  #     - uses: actions/setup-python@v4
  #       with:
  #         python-version: "3.10"
  #     - uses: actions/download-artifact@v4
  #     - uses: pypa/gh-action-pypi-publish@release/v1
  #       with:
  #         repository-url: https://test.pypi.org/legacy/
  #         password: ${{ secrets.TEST_PYPI_API_TOKEN }}
  #     - uses: actions/cache@v3
  #       with:
  #         path: venv
  #         key: pip-${{ runner.os }}-${{ matrix.python-version }}
  #     - run: cicd-support/cicd.sh "${{ github.job }}"

  # publish:
  #   needs: publish-test
  #   runs-on: ubuntu-latest
  #   environment: Production
  #   permissions:
  #     contents: write
  #   steps:
  #     - uses: actions/checkout@v4
  #     - uses: actions/setup-python@v4
  #       with:
  #         python-version: "3.10"
  #     - uses: actions/download-artifact@v4
  #     - uses: pypa/gh-action-pypi-publish@release/v1
  #       with:
  #         password: ${{ secrets.PYPI_API_TOKEN }}
  #     - uses: actions/cache@v3
  #       with:
  #         path: venv
  #         key: pip-${{ runner.os }}-${{ matrix.python-version }}
  #     - run: cicd-support/cicd.sh "${{ github.job }}"

# cSpell:ignore virtualenv pypirc batcave venv cicd pypi testpypi bumpver noreply pypa
