# TODO:
# - implement cache for virtualenv
# - limit publish to master and release branches
# - publish unit test results
# - parameterize python version
# - parameterize artifact directory

name: BatCave
on:
  push:
  pull_request:
  workflow_dispatch:
concurrency:
  group: ${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

env:
  PRODUCT: batcave
  VIRTUAL_ENV: venv
  ARTIFACTS_DIR: dist
  FLIT_ROOT_INSTALL: 1
  UNIT_TEST_DIR: unit_test_results
  GITLAB_USER_TOKEN: "${{ secrets.GITLAB_USER_TOKEN }}"
  PYPIRC: "${{ secrets.PYPIRC }}"
  GIT_AUTHOR_NAME: "${{ github.actor }}"
  GIT_AUTHOR_EMAIL: "${{ github.actor }}"
  GIT_COMMITTER_NAME: "${{ github.actor }}"
  GIT_COMMITTER_EMAIL: "${{ github.actor }}"
  GIT_REMOTE: gitlab_pipeline_origin

jobs:
  static-analysis:
    name: static-analysis
    runs-on: ubuntu-latest
    container:
      image: python:3.10-slim
    steps:
      - uses: actions/checkout@v4
      - run: cicd-support/cicd.sh "${{ github.job }}"
#     - uses: actions/cache@v3
#       with:
#         path: "$VIRTUAL_ENV"
#         key: default

  unit-tests:
    runs-on: ubuntu-latest
    container:
      image: python:3.10-slim
    steps:
      - uses: actions/checkout@v4
      - run: cicd-support/cicd.sh "${{ github.job }}"

  build:
    needs:
      - static-analysis
      - unit-tests
    runs-on: ubuntu-latest
    container:
      image: python:3.10-slim
    steps:
      - uses: actions/checkout@v4
      - run: cicd-support/cicd.sh "${{ github.job }}"
      - uses: actions/upload-artifact@v4
        if: success()
        with:
          name: dist
          path: dist

  install-test:
    needs: build
    runs-on: ubuntu-latest
    container:
      image: python:3.10-slim
    steps:
    - uses: actions/checkout@v4
    - uses: actions/download-artifact@v4
    - run: cicd-support/cicd.sh "${{ github.job }}"

  publish-test:
    needs: install-test
    runs-on: ubuntu-latest
    container:
      image: python:3.10-slim
    environment: Staging
    env:
      PYPI_REPO: testpypi
      BUMP_ARGS: "--tag-num"
    steps:
    - uses: actions/checkout@v4
    - uses: actions/download-artifact@v4
    - run: cicd-support/cicd.sh "${{ github.job }}"

#   publish:
#     needs: publish-test
#     runs-on: ubuntu-latest
#     container:
#       image: python:3.10-slim
#     environment: Production
#     env:
#       PYPI_REPO: pypi
#       BUMP_ARGS: "--patch --tag rc --tag-num"
#     steps:
#     - uses: actions/checkout@v4
#     - uses: actions/download-artifact@v4
#     - run: cicd-support/cicd.sh "${{ github.job }}"

# cSpell:ignore virtualenv pypirc batcave venv cicd pypi testpypi bumpver
