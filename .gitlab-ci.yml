image: python:3.10-slim

workflow:
  rules:
    - if: $CI_PIPELINE_SOURCE == "web"
    - if: $CI_COMMIT_BRANCH && $CI_OPEN_MERGE_REQUESTS && $CI_PIPELINE_SOURCE == "push"
      when: never
    - if: $CI_PIPELINE_SOURCE == "merge_request_event"
    - if: $CI_COMMIT_BRANCH && $CI_OPEN_MERGE_REQUESTS
      when: never
    - if: $CI_COMMIT_BRANCH == "master" || $CI_COMMIT_BRANCH =~ /^release\/.*/ || $CI_COMMIT_BRANCH =~ /^feature\/.*/

stages:
  - static_analysis
  - unit_tests
  - build
  - install_test
  - publish_test
  - publish

variables:
  PRODUCT: BatCave
  ARTIFACTS_DIR: dist
  UNIT_TEST_DIR: unit_test_results
  PYPI_PKG: dist/$PRODUCT-$RELEASE.tar.gz
  RELEASE: 42.0.0
  GIT_AUTHOR_NAME: $GITLAB_USER_NAME
  GIT_AUTHOR_EMAIL: $GITLAB_USER_EMAIL
  GIT_COMMITTER_NAME: $GITLAB_USER_NAME
  GIT_COMMITTER_EMAIL: $GITLAB_USER_EMAIL

cache:
  paths:
    - .local/share/virtualenvs

.base:
  variables:
    FLIT_ROOT_INSTALL: 1
  before_script:
    - cat /etc/os-release
    - python -V
    - python -m pip install -U pip
    - pip install -U setuptools wheel
    - pip install -U flit
    - flit install -s --deps all

static_analysis:
  stage: static_analysis
  extends: .base
  script:
    - pylint batcave
    - flake8 batcave
    - mypy batcave

unit_tests:
  stage: unit_tests
  extends: .base
  script:
    - python -m xmlrunner discover -o $UNIT_TEST_DIR
  artifacts:
    reports:
      junit: $UNIT_TEST_DIR/*

build:
  stage: build
  extends: .base
  script:
    - flit build
  artifacts:
    paths:
      - $ARTIFACTS_DIR

install_test:
  stage: install_test
  script:
    - pip install $PYPI_PKG

.publisher:
  extends: .base
  rules:
    - if: $CI_COMMIT_BRANCH == "master" || $CI_COMMIT_BRANCH =~ /^release\/.*/ || $CI_COMMIT_BRANCH =~ /^feature\/.*/
      when: manual
      allow_failure: false
  script:
    - python build.py publish $BUILD_ARGS

publish_test:
  stage: publish_test
  environment: Staging
  extends: .publisher
  variables:
    BUILD_ARGS: test $GITLAB_USER_LOGIN $GITLAB_USER_TOKEN $PYPI_TEST_TOKEN

publish:
  stage: publish
  environment: Production
  extends: .publisher
  variables:
    BUILD_ARGS: $RELEASE $GITLAB_USER_LOGIN $GITLAB_USER_TOKEN $PYPI_PRODUCTION_TOKEN

# cSpell:ignore pypi virtualenvs batcave stest mypy utest xmlrunner
