image: python:3.10-slim

workflow:
  rules:
    - if: $CI_PIPELINE_SOURCE == "web"
    - if: $CI_COMMIT_BRANCH && $CI_OPEN_MERGE_REQUESTS && $CI_PIPELINE_SOURCE == "push"
      when: never
    - if: $CI_PIPELINE_SOURCE == "merge_request_event"
    - if: $CI_COMMIT_BRANCH && $CI_OPEN_MERGE_REQUESTS
      when: never
    - if: $CI_COMMIT_BRANCH == "master" || $CI_COMMIT_BRANCH =~ /^release\/.*/ || $CI_COMMIT_BRANCH =~ /^feature\/.*/

stages:
  - static_analysis
  - unit_tests
  - build
  - install_test
  - publish_test
  - publish

variables:
  PRODUCT: batcave
  VIRTUAL_ENV: venv
  ARTIFACTS_DIR: dist
  UNIT_TEST_DIR: unit_test_results
  GIT_AUTHOR_NAME: $GITLAB_USER_NAME
  GIT_AUTHOR_EMAIL: $GITLAB_USER_EMAIL
  GIT_COMMITTER_NAME: $GITLAB_USER_NAME
  GIT_COMMITTER_EMAIL: $GITLAB_USER_EMAIL

cache:
  paths:
    - $VIRTUAL_ENV

.base:
  variables:
    FLIT_ROOT_INSTALL: 1
  before_script:
    - cat /etc/os-release
    - python -V
    - pip install -U virtualenv
    - if [ ! -e $VIRTUAL_ENV ];
      then
        echo "Creating up virtual environment"
        virtualenv $VIRTUAL_ENV;
        source $VIRTUAL_ENV/bin/activate;
        python -m pip install -U pip;
        pip install -U setuptools wheel;
        pip install -U flit;
        flit install -s --deps all;
      else
        echo "Activating virtual environment"
        source $VIRTUAL_ENV/bin/activate;
      fi

static_analysis:
  stage: static_analysis
  extends: .base
  script:
    - pylint $PRODUCT
    - flake8 $PRODUCT
    - mypy $PRODUCT

unit_tests:
  stage: unit_tests
  extends: .base
  script:
    - python -m xmlrunner discover -o $UNIT_TEST_DIR
  artifacts:
    reports:
      junit: $UNIT_TEST_DIR/*

build:
  stage: build
  extends: .base
  script:
    - apt-get update
    - apt-get -y -qq --no-install-recommends install git
    - flit build
  artifacts:
    paths:
      - $ARTIFACTS_DIR

install_test:
  stage: install_test
  script:
    - pip install $ARTIFACTS_DIR/*.tar.gz

.publisher:
  extends: .base
  rules:
    - if: $CI_COMMIT_BRANCH == "master" || $CI_COMMIT_BRANCH =~ /^release\/.*/ || $CI_COMMIT_BRANCH =~ /^feature\/.*/
      when: manual
      allow_failure: false
  script:
    - twine upload --config-file $PYPIRC -r $PYPI_REPO $ARTIFACTS_DIR/*
    - bumpver update $BUMP_ARG

publish_test:
  stage: publish_test
  environment: Staging
  extends: .publisher
  variables:
    PYPI_REPO: testpypi
    BUMP_ARG: --tag-num --no-tag-commit

publish:
  stage: publish
  environment: Production
  extends: .publisher
  variables:
    PYPI_REPO: testpypi

# cSpell:ignore batcave pypi virtualenvs mypy xmlrunner pypirc testpypi virtualenv venv
