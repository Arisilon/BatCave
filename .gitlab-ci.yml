image: python:3.7-alpine

stages:
  - unit_tests
  - ci_build
  - install_test
  - publish_test
  - publish
  - release_test

variables:
  PRODUCT: BatCave
  BUILD_DIR: Build
  ARTIFACTS_DIR: $BUILD_DIR/artifacts
  UNIT_TEST_DIR: $BUILD_DIR/unit_test_results
  PYPI_PKG: $BUILD_DIR/artifacts/$PRODUCT-$RELEASE.tar.gz
  RELEASE: 39.0.0
  GIT_AUTHOR_NAME: $GITLAB_USER_NAME
  GIT_AUTHOR_EMAIL: $GITLAB_USER_EMAIL
  GIT_COMMITTER_NAME: $GITLAB_USER_NAME
  GIT_COMMITTER_EMAIL: $GITLAB_USER_EMAIL

cache:
  paths:
    - .local/share/virtualenvs

.builder:
  except:
    - tags
  before_script:
    - apk add build-base git libffi-dev openssl-dev
    - python -V
    - pip install -U pip
    - pip install -r requirements-frozen.txt
    - cd $BUILD_DIR
  script:
    - python build.py $CI_JOB_STAGE $BUILD_ARGS

unit_tests:
  stage: unit_tests
  extends: .builder
  artifacts:
    reports:
      junit: $UNIT_TEST_DIR/*

ci_build:
  stage: ci_build
  extends: .builder
  variables:
    BUILD_ARGS: $RELEASE $CI_JOB_ID
  artifacts:
    paths:
      - $ARTIFACTS_DIR

install_test:
  stage: install_test
  image: python:3.7
  except:
    - tags
  before_script:
    - echo Testing install
  script:
    - pip install $PYPI_PKG

.publisher:
  extends: .builder
  image: python:3.8
  only:
    - master
    - /^release\/.*$/
  when: manual
  allow_failure: false
  before_script:
    - pip install -r requirements-frozen.txt
    - cd $BUILD_DIR

publish_test:
  stage: publish_test
  environment: Staging
  extends: .publisher
  variables:
    BUILD_ARGS: test $GITLAB_USER_LOGIN $GITLAB_USER_TOKEN $PYPI_TEST_TOKEN

publish:
  stage: publish
  environment: Production
  extends: .publisher
  variables:
    BUILD_ARGS: $RELEASE $GITLAB_USER_LOGIN $GITLAB_USER_TOKEN $PYPI_PRODUCTION_TOKEN
